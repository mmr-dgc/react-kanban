{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mmr.deguchi\\\\Desktop\\\\\\u30C1\\u30E5\\u30FC\\u30C8\\u30EA\\u30A2\\u30EB\\\\react\\\\test_app\\\\src\\\\components\\\\presentational\\\\molecules\\\\Card.js\";\nimport React, { Component } from 'react';\nimport { DragSource, DropTarget } from 'react-dnd';\nimport _ from 'lodash';\nimport TitleLabel from '../atoms/TitleLabel';\nimport ContentLabel from '../atoms/ContentLabel';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Card(props) {\n  const {\n    isDragging,\n    isSpacer\n  } = props;\n  const style = {\n    opacity: isDragging || isSpacer ? 0.0 : 1,\n    width: \"272px\"\n  };\n  return _.flowRight(props.connectDragSource, props.connectDropTarget)( /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    style: style,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-content\",\n      children: [/*#__PURE__*/_jsxDEV(TitleLabel, {\n        title: props.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ContentLabel, {\n        content: props.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this));\n}\n_c = Card;\nexport const DraggableCard = _.flowRight([DropTarget('Card', {\n  hover(props, monitor) {\n    const {\n      columnId,\n      columnIndex\n    } = props;\n    const draggingItem = monitor.getItem();\n\n    if (draggingItem.id !== props.id) {\n      props.moveCard(draggingItem.id, columnId, columnIndex);\n    }\n  }\n\n}, connect => ({\n  connectDropTarget: connect.dropTarget()\n})), DragSource('Card', {\n  beginDrag(props) {\n    return {\n      id: props.id\n    };\n  },\n\n  isDragging(props, monitor) {\n    return props.id === monitor.getItem().id;\n  }\n\n}, (connect, monitor) => ({\n  connectDragSource: connect.dragSource(),\n  isDragging: monitor.isDragging()\n}))])(Card);\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["C:/Users/mmr.deguchi/Desktop/チュートリアル/react/test_app/src/components/presentational/molecules/Card.js"],"names":["React","Component","DragSource","DropTarget","_","TitleLabel","ContentLabel","Card","props","isDragging","isSpacer","style","opacity","width","flowRight","connectDragSource","connectDropTarget","title","content","DraggableCard","hover","monitor","columnId","columnIndex","draggingItem","getItem","id","moveCard","connect","dropTarget","beginDrag","dragSource"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,EAAqBC,UAArB,QAAuC,WAAvC;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,OAAOC,YAAP,MAAyB,uBAAzB;;AAEA,OAAO,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAC1B,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA;AAAd,MAA2BF,KAAjC;AACA,QAAMG,KAAK,GAAG;AACZC,IAAAA,OAAO,EAAEH,UAAU,IAAIC,QAAd,GAAyB,GAAzB,GAA+B,CAD5B;AAEZG,IAAAA,KAAK,EAAE;AAFK,GAAd;AAKA,SAAOT,CAAC,CAACU,SAAF,CAAYN,KAAK,CAACO,iBAAlB,EAAqCP,KAAK,CAACQ,iBAA3C,gBACL;AACE,IAAA,SAAS,EAAC,MADZ;AAEE,IAAA,KAAK,EAAEL,KAFT;AAAA,2BAIE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACE,QAAC,UAAD;AAAY,QAAA,KAAK,EAAEH,KAAK,CAACS;AAAzB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,YAAD;AAAc,QAAA,OAAO,EAAET,KAAK,CAACU;AAA7B;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,UADK,CAAP;AAWD;KAlBeX,I;AAoBhB,OAAO,MAAMY,aAAa,GAAGf,CAAC,CAACU,SAAF,CAAY,CACvCX,UAAU,CACR,MADQ,EAER;AACEiB,EAAAA,KAAK,CAACZ,KAAD,EAAQa,OAAR,EAAiB;AACpB,UAAM;AAACC,MAAAA,QAAD;AAAWC,MAAAA;AAAX,QAA0Bf,KAAhC;AACA,UAAMgB,YAAY,GAAGH,OAAO,CAACI,OAAR,EAArB;;AACA,QAAID,YAAY,CAACE,EAAb,KAAoBlB,KAAK,CAACkB,EAA9B,EAAkC;AAChClB,MAAAA,KAAK,CAACmB,QAAN,CAAeH,YAAY,CAACE,EAA5B,EAAgCJ,QAAhC,EAA0CC,WAA1C;AACD;AACF;;AAPH,CAFQ,EAWRK,OAAO,KAAK;AACVZ,EAAAA,iBAAiB,EAAEY,OAAO,CAACC,UAAR;AADT,CAAL,CAXC,CAD6B,EAgBvC3B,UAAU,CACR,MADQ,EAER;AACE4B,EAAAA,SAAS,CAACtB,KAAD,EAAQ;AACf,WAAO;AAACkB,MAAAA,EAAE,EAAElB,KAAK,CAACkB;AAAX,KAAP;AACD,GAHH;;AAKEjB,EAAAA,UAAU,CAACD,KAAD,EAAQa,OAAR,EAAiB;AACzB,WAAOb,KAAK,CAACkB,EAAN,KAAaL,OAAO,CAACI,OAAR,GAAkBC,EAAtC;AACD;;AAPH,CAFQ,EAWR,CAACE,OAAD,EAAUP,OAAV,MAAuB;AACrBN,EAAAA,iBAAiB,EAAEa,OAAO,CAACG,UAAR,EADE;AAErBtB,EAAAA,UAAU,EAAEY,OAAO,CAACZ,UAAR;AAFS,CAAvB,CAXQ,CAhB6B,CAAZ,EAgC1BF,IAhC0B,CAAtB","sourcesContent":["import React, { Component } from 'react';\r\nimport { DragSource, DropTarget } from 'react-dnd';\r\nimport _ from 'lodash';\r\nimport TitleLabel from '../atoms/TitleLabel';\r\nimport ContentLabel from '../atoms/ContentLabel';\r\n\r\nexport function Card(props) {\r\n  const { isDragging, isSpacer } = props\r\n  const style = { \r\n    opacity: isDragging || isSpacer ? 0.0 : 1,\r\n    width: \"272px\"\r\n  }\r\n\r\n  return _.flowRight(props.connectDragSource, props.connectDropTarget)(\r\n    <div\r\n      className=\"card\"\r\n      style={style}\r\n    >\r\n      <div className=\"card-content\">\r\n        <TitleLabel title={props.title} />\r\n        <ContentLabel content={props.content} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport const DraggableCard = _.flowRight([\r\n  DropTarget(\r\n    'Card',\r\n    {\r\n      hover(props, monitor) {\r\n        const {columnId, columnIndex} = props;\r\n        const draggingItem = monitor.getItem();\r\n        if (draggingItem.id !== props.id) {\r\n          props.moveCard(draggingItem.id, columnId, columnIndex);\r\n        }\r\n      },\r\n    },\r\n    connect => ({\r\n      connectDropTarget: connect.dropTarget(),\r\n    })\r\n  ),\r\n  DragSource(\r\n    'Card',\r\n    {\r\n      beginDrag(props) {\r\n        return {id: props.id};\r\n      },\r\n\r\n      isDragging(props, monitor) {\r\n        return props.id === monitor.getItem().id;\r\n      },\r\n    },\r\n    (connect, monitor) => ({\r\n      connectDragSource: connect.dragSource(),\r\n      isDragging: monitor.isDragging(),\r\n    })\r\n  ),\r\n])(Card);"]},"metadata":{},"sourceType":"module"}