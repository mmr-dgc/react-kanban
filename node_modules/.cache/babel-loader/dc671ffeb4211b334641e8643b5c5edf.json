{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mmr.deguchi\\\\Desktop\\\\\\u30C1\\u30E5\\u30FC\\u30C8\\u30EA\\u30A2\\u30EB\\\\react\\\\test_app\\\\src\\\\components\\\\presentational\\\\molecules\\\\Card.js\";\nimport React, { Component } from 'react';\nimport { DragSource, DropTarget } from 'react-dnd';\nimport cn from 'classnames';\nimport _ from 'lodash';\nimport TitleLabel from '../atoms/TitleLabel';\nimport ContentLabel from '../atoms/ContentLabel';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Card(props) {\n  return _.flowRight(props.connectDragSource, props.connectDropTarget)( /*#__PURE__*/_jsxDEV(\"div\", {\n    className: cn('Card', {\n      'Card--dragging': props.isDragging,\n      'Card--spacer': props.isSpacer\n    }),\n    children: [/*#__PURE__*/_jsxDEV(TitleLabel, {\n      title: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ContentLabel, {\n      content: props.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this));\n}\n_c = Card;\nexport const DraggableCard = _.flowRight([DropTarget('Card', {\n  hover(props, monitor) {\n    const {\n      columnId,\n      columnIndex\n    } = props;\n    const draggingItem = monitor.getItem();\n\n    if (draggingItem.id !== props.id) {\n      props.moveCard(draggingItem.id, columnId, columnIndex);\n    }\n  }\n\n}, connect => ({\n  connectDropTarget: connect.dropTarget()\n})), DragSource('Card', {\n  beginDrag(props) {\n    return {\n      id: props.id\n    };\n  },\n\n  isDragging(props, monitor) {\n    return props.id === monitor.getItem().id;\n  }\n\n}, (connect, monitor) => ({\n  connectDragSource: connect.dragSource(),\n  isDragging: monitor.isDragging()\n}))])(Card);\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["C:/Users/mmr.deguchi/Desktop/チュートリアル/react/test_app/src/components/presentational/molecules/Card.js"],"names":["React","Component","DragSource","DropTarget","cn","_","TitleLabel","ContentLabel","Card","props","flowRight","connectDragSource","connectDropTarget","isDragging","isSpacer","title","DraggableCard","hover","monitor","columnId","columnIndex","draggingItem","getItem","id","moveCard","connect","dropTarget","beginDrag","dragSource"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,EAAqBC,UAArB,QAAuC,WAAvC;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,OAAOC,YAAP,MAAyB,uBAAzB;;AAEA,OAAO,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAC1B,SAAOJ,CAAC,CAACK,SAAF,CAAYD,KAAK,CAACE,iBAAlB,EAAqCF,KAAK,CAACG,iBAA3C,gBACL;AACE,IAAA,SAAS,EAAER,EAAE,CAAC,MAAD,EAAS;AACpB,wBAAkBK,KAAK,CAACI,UADJ;AAEpB,sBAAgBJ,KAAK,CAACK;AAFF,KAAT,CADf;AAAA,4BAME,QAAC,UAAD;AAAY,MAAA,KAAK,EAAEL,KAAK,CAACM;AAAzB;AAAA;AAAA;AAAA;AAAA,YANF,eAOE,QAAC,YAAD;AAAc,MAAA,OAAO,EAAEN,KAAK,CAACM;AAA7B;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADK,CAAP;AAWD;KAZeP,I;AAchB,OAAO,MAAMQ,aAAa,GAAGX,CAAC,CAACK,SAAF,CAAY,CACvCP,UAAU,CACR,MADQ,EAER;AACEc,EAAAA,KAAK,CAACR,KAAD,EAAQS,OAAR,EAAiB;AACpB,UAAM;AAACC,MAAAA,QAAD;AAAWC,MAAAA;AAAX,QAA0BX,KAAhC;AACA,UAAMY,YAAY,GAAGH,OAAO,CAACI,OAAR,EAArB;;AACA,QAAID,YAAY,CAACE,EAAb,KAAoBd,KAAK,CAACc,EAA9B,EAAkC;AAChCd,MAAAA,KAAK,CAACe,QAAN,CAAeH,YAAY,CAACE,EAA5B,EAAgCJ,QAAhC,EAA0CC,WAA1C;AACD;AACF;;AAPH,CAFQ,EAWRK,OAAO,KAAK;AACVb,EAAAA,iBAAiB,EAAEa,OAAO,CAACC,UAAR;AADT,CAAL,CAXC,CAD6B,EAgBvCxB,UAAU,CACR,MADQ,EAER;AACEyB,EAAAA,SAAS,CAAClB,KAAD,EAAQ;AACf,WAAO;AAACc,MAAAA,EAAE,EAAEd,KAAK,CAACc;AAAX,KAAP;AACD,GAHH;;AAKEV,EAAAA,UAAU,CAACJ,KAAD,EAAQS,OAAR,EAAiB;AACzB,WAAOT,KAAK,CAACc,EAAN,KAAaL,OAAO,CAACI,OAAR,GAAkBC,EAAtC;AACD;;AAPH,CAFQ,EAWR,CAACE,OAAD,EAAUP,OAAV,MAAuB;AACrBP,EAAAA,iBAAiB,EAAEc,OAAO,CAACG,UAAR,EADE;AAErBf,EAAAA,UAAU,EAAEK,OAAO,CAACL,UAAR;AAFS,CAAvB,CAXQ,CAhB6B,CAAZ,EAgC1BL,IAhC0B,CAAtB","sourcesContent":["import React, { Component } from 'react';\r\nimport { DragSource, DropTarget } from 'react-dnd';\r\nimport cn from 'classnames';\r\nimport _ from 'lodash';\r\nimport TitleLabel from '../atoms/TitleLabel';\r\nimport ContentLabel from '../atoms/ContentLabel';\r\n\r\nexport function Card(props) {\r\n  return _.flowRight(props.connectDragSource, props.connectDropTarget)(\r\n    <div\r\n      className={cn('Card', {\r\n        'Card--dragging': props.isDragging,\r\n        'Card--spacer': props.isSpacer,\r\n      })}\r\n    >\r\n      <TitleLabel title={props.title} />\r\n      <ContentLabel content={props.title} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport const DraggableCard = _.flowRight([\r\n  DropTarget(\r\n    'Card',\r\n    {\r\n      hover(props, monitor) {\r\n        const {columnId, columnIndex} = props;\r\n        const draggingItem = monitor.getItem();\r\n        if (draggingItem.id !== props.id) {\r\n          props.moveCard(draggingItem.id, columnId, columnIndex);\r\n        }\r\n      },\r\n    },\r\n    connect => ({\r\n      connectDropTarget: connect.dropTarget(),\r\n    })\r\n  ),\r\n  DragSource(\r\n    'Card',\r\n    {\r\n      beginDrag(props) {\r\n        return {id: props.id};\r\n      },\r\n\r\n      isDragging(props, monitor) {\r\n        return props.id === monitor.getItem().id;\r\n      },\r\n    },\r\n    (connect, monitor) => ({\r\n      connectDragSource: connect.dragSource(),\r\n      isDragging: monitor.isDragging(),\r\n    })\r\n  ),\r\n])(Card);"]},"metadata":{},"sourceType":"module"}