{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mmr.deguchi\\\\Desktop\\\\\\u30C1\\u30E5\\u30FC\\u30C8\\u30EA\\u30A2\\u30EB\\\\react\\\\test_app\\\\src\\\\components\\\\presentational\\\\molecules\\\\Card.js\";\nimport React, { Component } from 'react';\nimport { DragSource, DropTarget } from 'react-dnd';\nimport TitleLabel from '../atoms/TitleLabel';\nimport ContentLabel from '../atoms/ContentLabel';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst dragSource = DragSource(\"item\", {\n  beginDrag(props) {\n    return props;\n  }\n\n}, (connect, monitor) => {\n  return {\n    connectDragSource: connect.dragSource(),\n    connectDragPreview: connect.dragPreview(),\n    isDragging: monitor.isDragging()\n  };\n});\nconst dropTarget = DropTarget(\"item\", {\n  drop(dropProps, monitor) {\n    const dragProps = monitor.getItem();\n\n    if (dropProps.id !== dragProps.id) {\n      dragProps.onDrop(dragProps.id, dropProps.id);\n    }\n  }\n\n}, connect => {\n  return {\n    connectDropTarget: connect.dropTarget()\n  };\n});\n\nfunction Card(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-content\",\n      children: [/*#__PURE__*/_jsxDEV(TitleLabel, {\n        title: props.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ContentLabel, {\n        content: props.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Card;\nexport default Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["C:/Users/mmr.deguchi/Desktop/チュートリアル/react/test_app/src/components/presentational/molecules/Card.js"],"names":["React","Component","DragSource","DropTarget","TitleLabel","ContentLabel","dragSource","beginDrag","props","connect","monitor","connectDragSource","connectDragPreview","dragPreview","isDragging","dropTarget","drop","dropProps","dragProps","getItem","id","onDrop","connectDropTarget","Card","title","content"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,EAAqBC,UAArB,QAAuC,WAAvC;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,OAAOC,YAAP,MAAyB,uBAAzB;;AAEA,MAAMC,UAAU,GAAGJ,UAAU,CAAC,MAAD,EAAS;AACpCK,EAAAA,SAAS,CAACC,KAAD,EAAQ;AACf,WAAOA,KAAP;AACD;;AAHmC,CAAT,EAI1B,CAACC,OAAD,EAAUC,OAAV,KAAsB;AACvB,SAAO;AACLC,IAAAA,iBAAiB,EAAEF,OAAO,CAACH,UAAR,EADd;AAELM,IAAAA,kBAAkB,EAAEH,OAAO,CAACI,WAAR,EAFf;AAGLC,IAAAA,UAAU,EAAEJ,OAAO,CAACI,UAAR;AAHP,GAAP;AAKD,CAV4B,CAA7B;AAYA,MAAMC,UAAU,GAAGZ,UAAU,CAAC,MAAD,EAAS;AACpCa,EAAAA,IAAI,CAACC,SAAD,EAAYP,OAAZ,EAAqB;AACvB,UAAMQ,SAAS,GAAGR,OAAO,CAACS,OAAR,EAAlB;;AACA,QAAIF,SAAS,CAACG,EAAV,KAAiBF,SAAS,CAACE,EAA/B,EAAmC;AACjCF,MAAAA,SAAS,CAACG,MAAV,CAAiBH,SAAS,CAACE,EAA3B,EAA+BH,SAAS,CAACG,EAAzC;AACD;AACF;;AANmC,CAAT,EAO1BX,OAAO,IAAI;AACZ,SAAO;AACLa,IAAAA,iBAAiB,EAAEb,OAAO,CAACM,UAAR;AADd,GAAP;AAGD,CAX4B,CAA7B;;AAaA,SAASQ,IAAT,CAAcf,KAAd,EAAqB;AACnB,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACE,QAAC,UAAD;AAAY,QAAA,KAAK,EAAEA,KAAK,CAACgB;AAAzB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,YAAD;AAAc,QAAA,OAAO,EAAEhB,KAAK,CAACiB;AAA7B;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;KATQF,I;AAWT,eAAeA,IAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { DragSource, DropTarget } from 'react-dnd';\r\nimport TitleLabel from '../atoms/TitleLabel';\r\nimport ContentLabel from '../atoms/ContentLabel';\r\n\r\nconst dragSource = DragSource(\"item\", {\r\n  beginDrag(props) {\r\n    return props;\r\n  }\r\n}, (connect, monitor) => {\r\n  return {\r\n    connectDragSource: connect.dragSource(),\r\n    connectDragPreview: connect.dragPreview(),\r\n    isDragging: monitor.isDragging()\r\n  };\r\n})\r\n\r\nconst dropTarget = DropTarget(\"item\", {\r\n  drop(dropProps, monitor) {\r\n    const dragProps = monitor.getItem();　\r\n    if (dropProps.id !== dragProps.id) {\r\n      dragProps.onDrop(dragProps.id, dropProps.id);\r\n    }\r\n  }\r\n}, connect => {\r\n  return {\r\n    connectDropTarget: connect.dropTarget()\r\n  };\r\n})\r\n\r\nfunction Card(props) {\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card-content\">\r\n        <TitleLabel title={props.title} />\r\n        <ContentLabel content={props.content} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n"]},"metadata":{},"sourceType":"module"}