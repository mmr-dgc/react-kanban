{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mmr.deguchi\\\\Desktop\\\\\\u30C1\\u30E5\\u30FC\\u30C8\\u30EA\\u30A2\\u30EB\\\\react\\\\test_app\\\\src\\\\components\\\\presentational\\\\molecules\\\\Card.js\";\nimport React, { Component } from 'react';\nimport { DragSource, DropTarget } from 'react-dnd';\nimport TitleLabel from '../atoms/TitleLabel';\nimport ContentLabel from '../atoms/ContentLabel';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst dragSource = DragSource(\"item\", {\n  beginDrag(props) {\n    return props;\n  }\n\n}, (connect, monitor) => {\n  return {\n    connectDragSource: connect.dragSource(),\n    connectDragPreview: connect.dragPreview(),\n    isDragging: monitor.isDragging()\n  };\n});\nconst dropTarget = DropTarget(\"item\", {\n  drop(dropProps, monitor) {\n    const dragProps = monitor.getItem();\n\n    if (dropProps.id !== dragProps.id) {\n      dragProps.onDrop(dragProps.id, dropProps.id);\n    }\n  }\n\n}, connect => {\n  return {\n    connectDropTarget: connect.dropTarget()\n  };\n});\n\nclass Card extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-content\",\n        children: [/*#__PURE__*/_jsxDEV(TitleLabel, {\n          title: this.props.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(ContentLabel, {\n          content: this.props.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default Card;","map":{"version":3,"sources":["C:/Users/mmr.deguchi/Desktop/チュートリアル/react/test_app/src/components/presentational/molecules/Card.js"],"names":["React","Component","DragSource","DropTarget","TitleLabel","ContentLabel","dragSource","beginDrag","props","connect","monitor","connectDragSource","connectDragPreview","dragPreview","isDragging","dropTarget","drop","dropProps","dragProps","getItem","id","onDrop","connectDropTarget","Card","constructor","render","title","content"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,EAAqBC,UAArB,QAAuC,WAAvC;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,OAAOC,YAAP,MAAyB,uBAAzB;;AAEA,MAAMC,UAAU,GAAGJ,UAAU,CAC3B,MAD2B,EAE3B;AAACK,EAAAA,SAAS,CAACC,KAAD,EAAQ;AAChB,WAAOA,KAAP;AACD;;AAFD,CAF2B,EAK3B,CAACC,OAAD,EAAUC,OAAV,KAAsB;AACpB,SAAO;AACLC,IAAAA,iBAAiB,EAAEF,OAAO,CAACH,UAAR,EADd;AAELM,IAAAA,kBAAkB,EAAEH,OAAO,CAACI,WAAR,EAFf;AAGLC,IAAAA,UAAU,EAAEJ,OAAO,CAACI,UAAR;AAHP,GAAP;AAIG,CAVsB,CAA7B;AAaA,MAAMC,UAAU,GAAGZ,UAAU,CAC3B,MAD2B,EAE3B;AAACa,EAAAA,IAAI,CAACC,SAAD,EAAYP,OAAZ,EAAqB;AACxB,UAAMQ,SAAS,GAAGR,OAAO,CAACS,OAAR,EAAlB;;AACA,QAAIF,SAAS,CAACG,EAAV,KAAiBF,SAAS,CAACE,EAA/B,EAAmC;AACjCF,MAAAA,SAAS,CAACG,MAAV,CAAiBH,SAAS,CAACE,EAA3B,EAA+BH,SAAS,CAACG,EAAzC;AACD;AACF;;AALD,CAF2B,EAQ3BX,OAAO,IAAI;AACT,SAAO;AAACa,IAAAA,iBAAiB,EAAEb,OAAO,CAACM,UAAR;AAApB,GAAP;AACD,CAV0B,CAA7B;;AAaA,MAAMQ,IAAN,SAAmBtB,SAAnB,CAA6B;AAE3BuB,EAAAA,WAAW,CAAChB,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACD;;AAEDiB,EAAAA,MAAM,GAAG;AACP,wBACA;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,gCACE,QAAC,UAAD;AAAY,UAAA,KAAK,EAAE,KAAKjB,KAAL,CAAWkB;AAA9B;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,YAAD;AAAc,UAAA,OAAO,EAAE,KAAKlB,KAAL,CAAWmB;AAAlC;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADA;AAQD;;AAf0B;;AAkB7B,eAAeJ,IAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { DragSource, DropTarget } from 'react-dnd';\r\nimport TitleLabel from '../atoms/TitleLabel';\r\nimport ContentLabel from '../atoms/ContentLabel';\r\n\r\nconst dragSource = DragSource(\r\n  \"item\", \r\n  {beginDrag(props) {\r\n    return props;\r\n  }}, \r\n  (connect, monitor) => {\r\n    return {\r\n      connectDragSource: connect.dragSource(),\r\n      connectDragPreview: connect.dragPreview(),\r\n      isDragging: monitor.isDragging()\r\n    };}\r\n)\r\n\r\nconst dropTarget = DropTarget(\r\n  \"item\", \r\n  {drop(dropProps, monitor) {\r\n    const dragProps = monitor.getItem();　\r\n    if (dropProps.id !== dragProps.id) {\r\n      dragProps.onDrop(dragProps.id, dropProps.id);\r\n    }\r\n  }}, \r\n  connect => {\r\n    return {connectDropTarget: connect.dropTarget()};\r\n  }\r\n)\r\n\r\nclass Card extends Component {\r\n\r\n  constructor(props) {\r\n    super(props)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n    <div className=\"card\">\r\n      <div className=\"card-content\">\r\n        <TitleLabel title={this.props.title} />\r\n        <ContentLabel content={this.props.content} />\r\n      </div>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Card;\r\n"]},"metadata":{},"sourceType":"module"}