{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mmr.deguchi\\\\Desktop\\\\\\u30C1\\u30E5\\u30FC\\u30C8\\u30EA\\u30A2\\u30EB\\\\react\\\\test_app\\\\src\\\\components\\\\container\\\\organisms\\\\BordContainer.js\";\nimport React, { Component } from 'react';\nimport { DraggableCard } from '../../presentational/molecules/Card';\nimport { Bord } from './Bord';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass BordContainer extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onDrop = (toId, fromId) => {\n      const items = this.state.items.slice();\n      const toIndex = items.findIndex(i => i.id === toId);\n      const fromIndex = items.findIndex(i => i.id === fromId);\n      const toItem = items[toIndex];\n      const fromItem = items[fromIndex];\n      items[toIndex] = fromItem;\n      items[fromIndex] = toItem;\n      this.setState({\n        items\n      });\n    };\n\n    this.findItem = index => {\n      return this.state.items.filter(c => c.id === index)[0].id;\n    };\n\n    this.state = {\n      items: [{\n        id: 1,\n        title: \"aaa\",\n        content: \"内容\"\n      }, {\n        id: 2,\n        title: \"bbb\",\n        content: \"内容\"\n      }, {\n        id: 3,\n        title: \"ccc\",\n        content: \"内容\"\n      }]\n    };\n  }\n\n  render() {\n    const style = {\n      width: \"100%\",\n      background: \"rgba(0,0,0,0.1)\"\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bordContainer\",\n      style: style,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: this.props.columns.map(column => /*#__PURE__*/_jsxDEV(Bord, {\n          title: column.title,\n          addCard: this.props.addCard.bind(null, column.id),\n          children: [column.cardIds.map(cardId => this.props.cards.find(card => card.id === cardId)).map((card, index) => /*#__PURE__*/_jsxDEV(DraggableCard, {\n            id: card.id,\n            columnId: column.id,\n            columnIndex: index,\n            title: card.title,\n            moveCard: this.props.moveCard\n          }, card.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 17\n          }, this)), column.cardIds.length === 0 && /*#__PURE__*/_jsxDEV(DraggableCard, {\n            isSpacer: true,\n            moveCard: cardId => this.props.moveCard(cardId, column.id, 0)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this)]\n        }, column.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default BordContainer;","map":{"version":3,"sources":["C:/Users/mmr.deguchi/Desktop/チュートリアル/react/test_app/src/components/container/organisms/BordContainer.js"],"names":["React","Component","DraggableCard","Bord","BordContainer","constructor","props","onDrop","toId","fromId","items","state","slice","toIndex","findIndex","i","id","fromIndex","toItem","fromItem","setState","findItem","index","filter","c","title","content","render","style","width","background","columns","map","column","addCard","bind","cardIds","cardId","cards","find","card","moveCard","length"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport {DraggableCard} from '../../presentational/molecules/Card';\r\nimport {Bord} from './Bord';\r\n\r\nclass BordContainer extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      items: [\r\n        {id: 1, title: \"aaa\", content:\"内容\"},\r\n        {id: 2, title: \"bbb\", content:\"内容\"},\r\n        {id: 3, title: \"ccc\", content:\"内容\"}\r\n      ]\r\n    }\r\n  }\r\n\r\n  onDrop = (toId, fromId) => {\r\n    const items = this.state.items.slice();\r\n    const toIndex = items.findIndex(i => i.id === toId);\r\n    const fromIndex = items.findIndex(i => i.id === fromId);\r\n    const toItem = items[toIndex];\r\n    const fromItem = items[fromIndex];\r\n    items[toIndex] = fromItem;\r\n    items[fromIndex] = toItem;\r\n    this.setState({items})\r\n  }\r\n\r\n  findItem = (index) => {\r\n    return this.state.items.filter(c => c.id === index)[0].id\r\n  }\r\n\r\n  render () {\r\n    const style = {\r\n      width: \"100%\",\r\n      background: \"rgba(0,0,0,0.1)\",\r\n    }\r\n    \r\n    return (\r\n    <div className=\"bordContainer\" style={style}>\r\n      <div className=\"row\">\r\n        {this.props.columns.map(column => (\r\n          <Bord\r\n            key={column.id}\r\n            title={column.title}\r\n            addCard={this.props.addCard.bind(null, column.id)}\r\n          >\r\n            {column.cardIds\r\n              .map(cardId => this.props.cards.find(card => card.id === cardId))\r\n              .map((card, index) => (\r\n                <DraggableCard\r\n                  key={card.id}\r\n                  id={card.id}\r\n                  columnId={column.id}\r\n                  columnIndex={index}\r\n                  title={card.title}\r\n                  moveCard={this.props.moveCard}\r\n                />\r\n            ))}\r\n\r\n            {column.cardIds.length === 0 && (\r\n              <DraggableCard\r\n                isSpacer\r\n                moveCard={cardId => this.props.moveCard(cardId, column.id, 0)}\r\n              />\r\n            )}\r\n          </Bord>\r\n        ))}\r\n      </div>\r\n    </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default BordContainer;\r\n"]},"metadata":{},"sourceType":"module"}